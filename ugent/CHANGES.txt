- rapporteer de mega-query die deze lijn veroorzaakt:

  https://github.com/DMPRoadmap/roadmap/blob/master/app/controllers/plans_controller.rb#L22

  fixed in v3.0.1, maar onvolledig: het gebruikt nu Rails.cache,
    maar in de toekomst moet dit herbekeken worden:

  zie https://github.com/DMPRoadmap/roadmap/pull/2379

- config/initializers/wicked_pdf_ugent.rb

  sets path of wkhtmltopdf (like in DMPonline_v4)

- TODO: rapporteer gebruik van "count" (ipv "size") op relations, "find_by", "where" e.d.
        preload alle records voor modellen die geen data maar types zijn (vb. Perm.all is een lijst van soorten permissies)

        [roadmap-ugent]   Perm Load (7.7ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'add_organisations' LIMIT 1
        [roadmap-ugent]   CACHE (0.1ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'add_organisations' LIMIT 1  [["name", "add_organisations"]]
        [roadmap-ugent]   Perm Load (1.7ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'modify_templates' LIMIT 1
        [roadmap-ugent]   CACHE (0.0ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'add_organisations' LIMIT 1  [["name", "add_organisations"]]
        [roadmap-ugent]   Perm Load (1.7ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'modify_guidance' LIMIT 1
        [roadmap-ugent]   CACHE (0.0ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'add_organisations' LIMIT 1  [["name", "add_organisations"]]
        [roadmap-ugent]   Perm Load (0.7ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'grant_permissions' LIMIT 1
        [roadmap-ugent]   CACHE (0.0ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'add_organisations' LIMIT 1  [["name", "add_organisations"]]
        [roadmap-ugent]   CACHE (0.0ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'add_organisations' LIMIT 1  [["name", "add_organisations"]]
        [roadmap-ugent]   CACHE (0.0ms)  SELECT  `perms`.* FROM `perms` WHERE `perms`.`name` = 'add_organisations' LIMIT 1  [["name", "add_organisations"]]

        Reden: current_user.can_org_admin? en andere functies roepen Perm.<permission> op (vb. Perm.add_orgs),
                maar die functies gebruiken find_by, die altijd query opnieuw uitvoert.
               aangezien er nooit veel permissies zijn, is het niet beter om alle permissies te laden?

  zie PR https://github.com/DMPRoadmap/roadmap/pull/2734

- TODO: app/model/org.plan#plans genereert héél lange IN-queries die lang duren

  in model Org wordt relation "plans" overschreven met een expliciete methode, en die voert deze query uit

     plan_ids = Role.administrator
                    .where(user_id: self.users.pluck(:id), active: true)
                    .pluck(:plan_id).uniq
     Plan.includes(:template, :phases, :roles, :users)
         .where(id: plan_ids)


  het aantal klopt ook niet?

      org = Org.find(4)
      Plan.where( :org_id => org.id ).count -> 4218
      org.plans.size -> 4228

  er werden namelijk 10 plannen geselecteerd van een andere organisatie!

      >   org_plans.map(&:org_id).select { |org_id| org_id != 4 }
      => [14, 16, 14, 16, 92, 92, 131, 14, 52, 171]

      fout in de tabel "roles"? -> nee: het is normaal dat mensen van andere organisaties
        kunnen voorkomen, want die kunnen via de tab "share" toegang gekregen hebben,
        maar het is natuurlijk fout om dat te gebruiken in de context van een org_admin.
        Dat zou immers willen zeggen dat een org_admin van een andere instelling hier ook
        org_admin-rechten op zou hebben..

  Issue: https://github.com/DMPRoadmap/roadmap/issues/2724
  PR: https://github.com/DMPRoadmap/roadmap/pull/2726

  Reden: org.plans != plannen van de organisatie,
                   = plannen van leden van de organisatie.
                     leden kunnen immers toegevoegd worden aan plannen van
                     andere organisaties

- app/model/plan.rb: preload roles en hergebruik ze

  zie PR https://github.com/DMPRoadmap/roadmap/pull/2727

- app/views/branded/devise/registrations/edit.html.erb

    removed tab (and tab content) for password

- app/views/devise/registrations/_personal_details.html.erb
    email: readonly (+class form-control-plaintext)
    org: readonly -> user[org_id] MOET json zijn volgens RegistrationsController#update
    departments: removed
    languages: removed (vertalingen toch beperkt)

- app/views/branded/layouts/_signin_signout.html.erb

  disabled language tab

  added link to /switch_user/edit

- TODO: phases zonder sections mogen niet getoond worden in de navigatie

  Plan.load_for_phase faalt daarom ..

- TODO: willen we wel dat gebruikers organisaties ingeven? Beter geen autocomplete op "org"

- config/initializers/ugent.rb

  * overschrijft methode Identifier#value_uniqueness_with_scheme zodat

    * voor shibboleth meerdere loginroutes per org zijn
    * voor orcid meerdere gebruikers per orcid mogelijk zijn
      meerdere identifiers per gebruiker mogelijk zijn

  * overschrijft methodes van Users::OmniauthCallbacksController

    ook om orcid/shibboleth te regelen volgens onze regels

  * voegt dpo toe aan plan na aanmaak

  * hergebruik oude tabel options_themes, nu onder de naam question_options_themes

  * voeg methoden toe aan model User:

    * alternative_accounts
    * nemo
    * ensure_password
    * guest?

  * voeg before_validation toe aan model User:

    * verhinder dat iemand email aanpast
    * wijzig Org toe obv oude organisation_domains, nu onder de naam ugent_org_domains

- app/controllers/ugent/selectable_user_controller.rb

  ugent specifieke controller waarmee je kan kiezen tussen accounts
  wanneer je een orcid overeenkomt met meer dan één account

- app/controllers/ugent/switch_user_controller.rb

  ugent specifieke controller waarmee naar een van je andere accounts
  kan gaan, indien jouw orcid ook overeenkomt met een andere account

- app/models/ugent/log.rb

  hergebruik oude tabel "logs", nu onder de naam "ugent_logs"

- app/models/ugent/org_domain.rb

  hergebruik oude tabel "organisation_domains",
  nu onder de naam "ugent_org_domains"

- config/custom.yml

  voegt ugent specifieke configuratie toe

  gebruik:

    * associëer elke Org met één of meerdere dpo's

- TODO: Identifier met als identifier_scheme voor shibboleth en identifiable_type "User" is leeg:

  moet gevuld worden tijdens upgrade

- app/views/branded/shared/_sign_in_form.html.erb
  app/views/branded/shared/_access_controls.html.erb

  * replace login/registration form with list of org identifiers
  * if an organisation has multiple identifiers, then append the host name of that id

- app/views/branded/home/index.html.erb

  changed width of signin panel to give it more space

- config/initializers/_dmproadmap_ugent.rb

  overrides settings config/initializers/_dmproadmap.rb

- config/initializers/devise_ugent.rb

  overrides settings from config/initializers/devise.rb

- config/initializers/contact_us.rb

  not included in .gitigore,
  and expected by roadmap to set (contact_us.rb.example not used)

- config/routes/*.yml

  voegt extra routes toe

  config/application.rb werd hiervoor aangepast!

- app/views/branded/plans/index.html.erb

  overrides app/views/plans/index.html.erb

  reason: override text above plans (switch to other user account)

- app/views/branded/orgs/admin_edit.html.erb

  overrides app/views/orgs/admin_edit.html.erb

  reason: disable tab schools/departments

- TODO: Contributors?

  automatically add contributors to the share tab, and merge the rights?
  what if someone removeds a contributor: what should happen to the rights?

- app/views/branded/plans/_share_form.html.erb

  disable section where you can set the visibility
  of the plan

  This is also globally disabled in config/initializers/ugent.rb:
    Phase#allow_visibility?
    Plan#allow_visibility?
