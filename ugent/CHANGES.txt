- config/initializers/wicked_pdf_ugent.rb

  sets path of wkhtmltopdf (like in DMPonline_v4)

- app/views/branded/devise/registrations/edit.html.erb

  removed tab (and tab content) for password

- app/views/branded/devise/registrations/_personal_details.html.erb

  email: readonly (+class form-control-plaintext)
  org: readonly -> user[org_id] must be json according to RegistrationsController#update
  departments: removed
  languages: removed (translations limited anyway)

- app/views/branded/layouts/_signin_signout.html.erb

  disabled language tab

  added link to /switch_user/edit

- config/initializers/ugent.rb

  * overrides method Identifier#value_uniqueness_with_scheme in such a way that

    * multiple shibboleth identifiers per org are possible (and therefore loginroutes)
    * multiple orcid identifiers per user are possible

  * overrides methods of Users::OmniauthCallbacksController

  * adds relation question_options_themes to QuestionOption

    this reuses an old (custom!) generated table options_themes,
    that was not part of DMPOnline_v4, but which we added ourselves.

    this way we can attach themes to question options

    These associations can only be read/updated in the RailsAdmin controller
    http://localhost:3000/admin/question_option

  * adds methods to model User:

    * alternative_accounts
    * nemo
    * ensure_password
    * guest?

  * adds before_validation to model User:

    * prevent someone from editing email attribute
    * change attribute org_id based on old table organisation_domains (now: table ugent_org_domains)

  * adds method gdpr? to model Template:

    a template contains privacy related data
    if one of the questions contains the theme "UGENT:DATA"

  * adds methods Plan.ld_uri and Plan.ld

    See also:
      - app/controllers/ugent/internal/exports_controller.rb
      - app/models/ugent/rest_user.rb

  * adds method Role.code_access_level

    only used in Plan.ld (see above)

  * adds methods Org.internal_export_dir and Org.internal_export_url

    internal_export_dir: returns the directory for that organisation where its JSON exports are stored
    internal_export_url: return the base_url for that organisation's JSON exports

    only used in Plan.ld and Ugent::Internal::ExportsController

  * adds hook after_save to model Contributor

    when a contributor is added/updated,
    a user with that email is given access
    to that plan

  * overrides Plan.visibility_allowed?

    disables feature that makes it possible to change the visibility

    We do not allow public plans

    See also app/views/branded/plans/_share_form.html.erb

- app/controllers/ugent/selectable_user_controller.rb

  ugent specific controller

  when user authenticates with orcid,
  and this orcid matches with multiple users at this end,
  this controller shows a select box from which one
  can choose the user to login to

  this use case is necessary to accomodate for users
  that are part of multiple organisations,
  but for some reason only have orcid as a login method.

- app/controllers/ugent/switch_user_controller.rb

  ugent specific controller

  if a user has an orcid that matches with other user accounts
  he/she can switch to that other user account

  differences with selectable_user_controller.rb:
    * only the OTHER users accounts are shown in the select box
    * happens when already logged in

- app/controllers/ugent/internal/exports_controller.rb

  ugent specific controller (deprecated)

  provides access to JSON exports of plans per organisation in /opt/dmponline_internal

  authenticates with basic auth

  username and password is drawn from attributes "code" and "token" of model Ugent::RestUser respectively

  When removed, remove also:
    - methods Plan.ld_uri and Plan.ld_uri in config/initializers/ugent.rb
    - file lib/tasks/ugent_deprecated.rake
    - routes starting with /internal from config/routes/ugent.rb
    - model Ugent::RestUser

  See also:

    - app/models/ugent/rest_user.rb
    - config/routes/ugent.rb
    - config/initializers/ugent.rb
    - lib/tasks/ugent_deprecated.rake

- app/models/ugent/rest_user.rb

  ugent specific model

  Stores authentication information for REST users that want to access Ugent::Internal::ExportsController

  Attributes:

    org_id
    code
    token

  See also:

    - app/controllers/ugent/internal/exports_controller.rb
    - config/routes/ugent.rb
    - config/initializers/ugent.rb
    - lib/tasks/ugent_deprecated.rake

- lib/tasks/ugent.rake

  ugent specific rake tasks

  deprecated

  to remove?

- lib/tasks/ugent_deprecated.rake

  ugent specific rake tasks

  generates JSON export of plans per organisation, and stores them in /opt/dmponline_internal

  See also:
    - app/controllers/ugent/internal/exports_controller.rb
    - config/routes/ugent.rb
    - app/models/ugent/rest_user.rb
    - config/initializers/ugent.rb
    - lib/tasks/ugent_deprecated.rake

- app/models/ugent/log.rb

  reuse old table "logs", now under the name "ugent_logs"
  Used in the past to track deleted "projects"

  Now one cannot delete plans anymore: the "remove" button
    simply removes all collaborators (plan.roles = [])
  Of course a plan can be removed in the CLI

  Still usefull?

- app/models/ugent/org_domain.rb

  reuse old table "organisation_domains",
  now under the name ugent_org_domains

  Can be edited in RailsAdmin by users with admin rights: http://localhost:3000/admin/ugent~org_domain

  See also:
    - rails_admin

- config/custom.yml

  adds ugent specific configuration toe

  not used at the moment

  if removed, also remove load statement from config/initializers/ugent.rb

- app/views/branded/shared/_sign_in_form.html.erb
  app/views/branded/shared/_access_controls.html.erb

  * replace login/registration form with list of org identifiers
  * if an organisation has multiple identifiers, then append the host name of that id

- app/views/branded/home/index.html.erb

  changed width of signin panel to give it more space

- config/initializers/_dmproadmap_ugent.rb

  overrides settings config/initializers/_dmproadmap.rb

  that _dmproadmap.rb is included in git,
  which makes it hard to configure it at the server

- config/initializers/devise_ugent.rb

  overrides settings from config/initializers/devise.rb

- config/initializers/contact_us.rb

  not included in .gitigore,
  and expected by roadmap to set (contact_us.rb.example not used)

- config/routes/*.rb

  add extra routes

  in order to load to extra files,
  I had to edit config/application.rb!

- app/views/branded/plans/index.html.erb

  overrides app/views/plans/index.html.erb

  reason: override text above plans (switch to other user account)

- app/views/branded/orgs/admin_edit.html.erb

  overrides app/views/orgs/admin_edit.html.erb

  reason: disable tab schools/departments

- app/views/branded/plans/_share_form.html.erb

  disable section where you can set the visibility
  of the plan

  This is also globally disabled in config/initializers/ugent.rb:
    Phase#allow_visibility?
    Plan#allow_visibility?

- app/views/branded/layouts/_navigation.html.erb

  disable link to page /public_plans

  see previous

- ugent/etc/systemd/roadmap.service

  Systemd Service file

  Copied to /etc/systemd/system at rpm build time

- ugent/etc/systemd/roadmap.conf

  Default EnvironmentFile, to be used in /etc/systemd/system/roadmap.service.
  Overrides must be put in /etc/sysconfig/roadmap.conf at the server.

- ugent/public/packs and ugent/public/assets

  precompiled assets for production mode
  this is generated at development time,
  so that it does not have to be generated when installed
  (and therefore should need nodejs, yarn and all that stuff)

  see also ugent/bin/build_assets

- ugent/bin/build_assets

  precompile all javascript and css assets
  in production mode, and copy them
  to ugent/public

  run this from the application directory

- add gem rails_admin to Gemfile.local

  In order to make it work I changed these things

  * changed gem "wicked_pdf" to higher version than 2.1.0 by pointing directly
    to the (unreleased) master branch

    Reason: when you try to access any page, the page load takes forever,
    and finally stops with an SystemStackError.

    See also: https://github.com/DMPRoadmap/roadmap/issues/2793

  * config/initializes/rails_admin.rb

    this file does not exist in the external repo

    rails_admin tries to load all ruby files as models, for some reason (even the controllers)
    so make sure to explicitly include all allowed models via config.included_models

  * add assets rails_admin/rails_admin.js and rails_admin/rails_admin.css to the assets compilation pipeline

    see config/initializers/assets.rb
    that file already existed, so may conflict in the future.

- app/helpers/version_helper.rb

  Removed at rpm build time.
  This file causes problems when rails is started outside of a git environment

  This file is already removed in the base repository,
  so this statement may be removed in the future

  See PR https://github.com/DMPRoadmap/roadmap/pull/2792
  See ticket https://github.com/DMPRoadmap/roadmap/issues/2782
